// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id                    String      @id @default(cuid())
  name                  String
  email                 String      @unique
  password              String
  phone                 String?
  address               String?
  logo                  String?
  themeColors           Json?       // Store theme colors as JSON
  socialLinks           Json?       // Store social media links
  subscriptionType      String      @default("trial")
  subscriptionEndDate   DateTime?
  isActive              Boolean     @default(true)
  slug                  String      @unique
  whatsappNumber        String?
  description           String?
  
  // Relations
  categories            Category[]
  products              Product[]
  
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt

  @@map("restaurants")
}

model Category {
  id            String      @id @default(cuid())
  restaurantId  String
  name          String
  description   String?
  image         String?
  sortOrder     Int         @default(0)
  isActive      Boolean     @default(true)
  
  // Relations
  restaurant    Restaurant  @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  products      Product[]
  
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@map("categories")
}

model Product {
  id            String      @id @default(cuid())
  restaurantId  String
  categoryId    String
  name          String
  description   String?
  price         Float
  image         String?
  isAvailable   Boolean     @default(true)
  sortOrder     Int         @default(0)
  
  // Relations
  restaurant    Restaurant  @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  category      Category    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@map("products")
}

model Subscription {
  id            String      @id @default(cuid())
  name          String
  duration      Int         // in days
  price         Float
  features      Json        // Store features as JSON array
  isActive      Boolean     @default(true)
  
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@map("subscriptions")
}
